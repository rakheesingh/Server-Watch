{"version":3,"file":"static/js/68.731e561b.chunk.js","mappings":"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","sources":["app/features/serverMetrics/Constant.js","app/utils/apis/ServerComparison.js","app/designComponent/charts/BarChart.jsx","app/designComponent/charts/PieChart.jsx","app/features/serverMetrics/layouts/ServersComparison.jsx"],"sourcesContent":["export const EachMetricsAndLegendMapping = {\n    cpuUsage: \"Track CPU Utilization Over Time\",\n    memoryUsage: \"Monitor Memory Consumption Trends\",\n    diskSpace: \"Analyze Disk Space Usage\",\n    latency: \"Monitor Server Response Time\"\n  };\n\n  export const MerticComaprisionLegendMapping = {\n    cpuUsage: \"Monitor CPU usage for better performance of your server\",\n    memoryUsage: \"Track memory usage to avoid bottlenecks\",\n    diskSpace: \"Check disk space to prevent issues\",\n}\n\nexport const ServerThresholds = {\n  cpuUsage: {\n    value: 75, // threshold value for CPU usage\n    tooltip: \"CPU usage above 75% indicates high load, which could affect performance.\"\n  },\n  memoryUsage: {\n    value: 80, // threshold value for Memory usage\n    tooltip: \"Memory usage above 80% means the server is running out of available memory.\"\n  },\n  diskSpace: {\n    value: 90, // threshold value for Disk usage\n    tooltip: \"Disk space above 90% means the server is running out of storage space.\"\n  },\n  latency: {\n    value: 200, // threshold value for Latency in ms\n    tooltip: \"Latency above 200ms could lead to delayed responses and degraded user experience.\"\n  }\n};\n","export const servers= [\n    { \"id\": 1, \"name\": \"Server A\", \"status\": \"Active\", \"cpuUsage\": 55, \"memoryUsage\": 75, \"diskSpace\": 20 },\n    { \"id\": 2, \"name\": \"Server B\", \"status\": \"Idle\", \"cpuUsage\": 20, \"memoryUsage\": 40, \"diskSpace\":35 },\n    { \"id\": 3, \"name\": \"Server C\", \"status\": \"Overloaded\", \"cpuUsage\": 95, \"memoryUsage\": 90, \"diskSpace\": 65 },\n    { \"id\": 4, \"name\": \"Server D\", \"status\": \"Overloaded\", \"cpuUsage\": 65, \"memoryUsage\": 20, \"diskSpace\": 20 }\n  ]","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport {\n  BarChart,\n  Bar,\n  Tooltip,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  ResponsiveContainer,\n} from \"recharts\";\n\nfunction BarChartComponent({ metricsData, Xaxis, Yaxis }) {\n  return (\n    <ResponsiveContainer width=\"100%\" height={400}>\n      <BarChart\n        data={metricsData}\n        margin={{\n          top: 20,\n          right: 30,\n          left: 20,\n          bottom: 5,\n        }}\n      >\n        <CartesianGrid stroke=\"#E2E8F0\" strokeDasharray=\"5 5\" />{\" \"}\n        <XAxis\n          dataKey={Xaxis}\n          tick={{ fill: \"#94A3B8\", fontSize: 12 }}\n          stroke=\"#E2E8F0\"\n        />\n        <YAxis tick={{ fill: \"#94A3B8\", fontSize: 12 }} stroke=\"#F5F5F5\" />\n        <Tooltip\n          contentStyle={{ backgroundColor: \"#f5f5f5\", border: \"none\" }}\n          cursor={{ fill: \"rgba(0, 0, 0, 0.1)\" }}\n        />\n        <Bar dataKey={Yaxis} fill=\"#0280FF\" barSize={25} style={{opacity:0.8}}/>\n      </BarChart>\n    </ResponsiveContainer>\n  );\n}\n\nBarChartComponent.propTypes = {\n  metricsData: PropTypes.array.isRequired,\n  Xaxis: PropTypes.string,\n  Yaxis: PropTypes.string\n};\n\nexport default BarChartComponent;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { Tooltip, ResponsiveContainer, PieChart, Pie, Cell } from \"recharts\";\n\nfunction PieChartComponent({ metricsData, Xaxis, Yaxis }) {\n\n  const COLORS = [0.6, 0.7, 0.8, 0.9]; // Define your color palette\n\n  return (\n    <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '400px' }}>\n      <ResponsiveContainer width=\"100%\" height=\"100%\" >\n        <PieChart>\n          <Tooltip />        \n          <Pie\n            data={metricsData}\n            dataKey={Yaxis}\n            nameKey={Xaxis}\n            cx=\"50%\"\n            cy=\"50%\"\n            outerRadius={100}\n            label\n          >\n            {metricsData.map((_, index) => (\n              <Cell key={`cell-${index}`} fill={\"#0280FF\"} style={{opacity: COLORS[index]}} />\n            ))}\n          </Pie>\n        </PieChart>\n      </ResponsiveContainer>\n    </div>\n  );\n}\n\nPieChartComponent.propTypes = {\n  metricsData: PropTypes.array.isRequired,\n  Xaxis: PropTypes.string,\n  Yaxis: PropTypes.string\n};\n\n\nexport default PieChartComponent;\n","import React from \"react\";\nimport { servers } from \"../../../utils/apis/ServerComparison\";\nimport BarChartComponent from \"../../../designComponent/charts/BarChart\";\nimport PieChartComponent from \"../../../designComponent/charts/PieChart\";\nimport { MetricsChartMapping } from \"../../../utils/constant\";\nimport { TextSM, TextXL } from \"../../../designComponent/typography/Typography\";\nimport { MerticComaprisionLegendMapping } from \"../Constant\";\n\nconst CHART_COMPONENT_MAP = {\n  BAR: BarChartComponent,\n  PIE: PieChartComponent,\n};\n\nfunction ServersComparison() {\n  const serversData = servers;\n\n  return (\n    <div className=\"w-full md:w-3/4 flex flex-col gap-3\">\n      <div>\n        <TextXL>Server Performance Comparison</TextXL>\n        <TextSM textColor={\"text-slate-500\"}>\n          Analyze real-time metrics and compare server performance across key\n          parameters.\n        </TextSM>\n      </div>\n\n      <div className=\"relative server-metrics-container p-6 border border-slate-200 flex flex-wrap gap-4 rounded\">\n        {MetricsChartMapping.map((metricsWithChart, index) => {\n          const ChartToRender = CHART_COMPONENT_MAP[metricsWithChart.chart];\n          const metricName = metricsWithChart.metric;\n          const metricDataToSend = serversData.map((data) => ({\n            name: data.name,\n            [metricName]: data[metricName],\n          }));\n          return (\n            <div key={index} className=\"py-4 pr-4 bg-slate-50 rounded-lg shadow\">\n              <ChartToRender\n                metricsData={metricDataToSend}\n                Xaxis=\"name\"\n                Yaxis={metricName}\n              />\n              <TextSM textColor={\"text-brand-blue-1\"} className =\"text-center\">{MerticComaprisionLegendMapping[metricName]}</TextSM>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default ServersComparison;\n"],"names":["EachMetricsAndLegendMapping","cpuUsage","memoryUsage","diskSpace","latency","MerticComaprisionLegendMapping","ServerThresholds","value","tooltip","servers","_ref","metricsData","Xaxis","Yaxis","_jsx","ResponsiveContainer","width","height","children","_jsxs","BarChart","data","margin","top","right","left","bottom","CartesianGrid","stroke","strokeDasharray","XAxis","dataKey","tick","fill","fontSize","YAxis","Tooltip","contentStyle","backgroundColor","border","cursor","Bar","barSize","style","opacity","COLORS","display","justifyContent","alignItems","PieChart","Pie","nameKey","cx","cy","outerRadius","label","map","_","index","Cell","CHART_COMPONENT_MAP","BAR","BarChartComponent","PIE","PieChartComponent","serversData","className","TextXL","TextSM","textColor","MetricsChartMapping","metricsWithChart","ChartToRender","chart","metricName","metric","metricDataToSend","name"],"sourceRoot":""}